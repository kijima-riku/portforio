{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Downloads\\\\library\\\\src\\\\calculate\\\\components1\\\\calculate.tsx\",\n  _s = $RefreshSig$();\n//数値を計算する、手数を数える、カウントダウン\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\nconst Calculate = _ref => {\n  _s();\n  let {\n    count,\n    goal,\n    setCount,\n    countdown,\n    setDown,\n    howmany,\n    countHowmany,\n    setScore,\n    Plus_No1,\n    Plus_No2,\n    Kake_No1,\n    Kake_No2\n  } = _ref;\n  const PlusNumber = Plus_No1;\n  const PlusNumber2 = Plus_No2;\n  const KakeNumber = Kake_No1;\n  const KakeNumber2 = Kake_No2;\n\n  //計算\n  const times = i => {\n    //操作数の関数\n    countHowmany(prevTimes => prevTimes + i);\n  };\n  const increase = (time, Plus) => {\n    times(time);\n    return count + Plus;\n  };\n  const doubling = Kake => {\n    times(1);\n    return count * Kake;\n  };\n  const handleIncreaseOne = () => {\n    setCount(increase(2, 1));\n    setDown(3);\n    setScore(prevscore => prevscore - 100);\n  };\n  const handleIncraese = Plus => {\n    return () => {\n      setCount(increase(1, Plus));\n      setDown(3);\n      setScore(prevscore => prevscore - 1);\n    };\n  };\n  const handleDoubling = Kake => {\n    return () => {\n      setCount(doubling(Kake));\n      setDown(3);\n      setScore(prevscore => prevscore - 1);\n    };\n  };\n  const handleReset = () => {\n    setCount(0);\n  };\n  //ボタン押すと３秒のカウントダウンが始まる処理\n  useEffect(() => {\n    let interval;\n    /* useEffectではstateが、≠nullのときにタイマーを動し続けるように設定\r\n    → bottunを押したときにstateを3（=3秒タイマーの開始値)に設定（下のhandleStart関数）\r\n    → カウントが開始される\r\n      → onClick属性には、stateを3に設定する処理のみを与えれば十分\r\n    */\n    if (countdown > 0) {\n      interval = setInterval(() => {\n        setDown(prevtime => prevtime - 1); //アンマウント\n      }, 1000);\n      if (count === goal) {\n        clearInterval(interval);\n      }\n    }\n    ;\n    if (countdown <= 0) {\n      setCount(0);\n      setDown(0);\n      clearInterval(interval);\n    }\n    return () => {\n      clearInterval(interval);\n    };\n  }, [count, countdown, goal]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\",\n      onClick: handleIncreaseOne,\n      children: \"+1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleIncraese(PlusNumber),\n      children: [\"+\", PlusNumber]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleIncraese(PlusNumber2),\n      children: [\"+\", PlusNumber2]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDoubling(KakeNumber),\n      children: [\"\\xD7\", KakeNumber]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDoubling(KakeNumber2),\n      children: [\"\\xD7\", KakeNumber2]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleReset,\n      children: \"reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4\",\n      children: [howmany, \"\\u56DE\\u64CD\\u4F5C\\u3057\\u307E\\u3057\\u305F\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(Calculate, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Calculate;\nexport default Calculate;\nvar _c;\n$RefreshReg$(_c, \"Calculate\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","Calculate","_ref","_s","count","goal","setCount","countdown","setDown","howmany","countHowmany","setScore","Plus_No1","Plus_No2","Kake_No1","Kake_No2","PlusNumber","PlusNumber2","KakeNumber","KakeNumber2","times","i","prevTimes","increase","time","Plus","doubling","Kake","handleIncreaseOne","prevscore","handleIncraese","handleDoubling","handleReset","interval","setInterval","prevtime","clearInterval","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/PC/Downloads/library/src/calculate/components1/calculate.tsx"],"sourcesContent":["//数値を計算する、手数を数える、カウントダウン\r\nimport React,{useEffect} from 'react';\r\n\r\ninterface calcProps{\r\n  count: number;\r\n  goal: number;\r\n  setCount: (value : number) => void;\r\n  countdown: number | null;\r\n  setDown: Function;\r\n  howmany: number;\r\n  countHowmany: Function;\r\n  score: number;\r\n  setScore: Function;\r\n  Plus_No1: number;\r\n  Plus_No2: number;\r\n  Kake_No1: number;\r\n  Kake_No2: number;\r\n};\r\n\r\n\r\nconst Calculate:React.FC<calcProps>= ({count, goal, setCount, countdown, setDown,howmany, countHowmany, setScore, Plus_No1, Plus_No2, Kake_No1, Kake_No2}) => {\r\n\r\n  const PlusNumber:number = Plus_No1;\r\n  const PlusNumber2:number = Plus_No2;\r\n  const KakeNumber: number = Kake_No1;\r\n  const KakeNumber2: number = Kake_No2;\r\n\r\n    //計算\r\n    const times = (i : number) => { //操作数の関数\r\n      countHowmany((prevTimes: number) => prevTimes + i);\r\n    }\r\n    const increase = (time:number, Plus: number) => {\r\n        times(time);\r\n        return count + Plus;\r\n        };\r\n    const doubling = (Kake: number) => {\r\n        times(1);\r\n         return count * Kake;\r\n        };\r\n\r\n    const handleIncreaseOne = () => {\r\n      setCount(increase(2, 1));\r\n      setDown(3);\r\n      setScore((prevscore:number) => prevscore - 100)\r\n    };\r\n    const handleIncraese = (Plus: number) => {\r\n        return () => {\r\n        setCount(increase(1, Plus));\r\n        setDown(3);\r\n        setScore((prevscore:number) => prevscore - 1)\r\n      };\r\n      };\r\n\r\n    const handleDoubling = (Kake: number) => {\r\n      return () => {\r\n      setCount(doubling(Kake));\r\n        setDown(3);\r\n        setScore((prevscore:number) => prevscore - 1)\r\n      };\r\n      };\r\n\r\n    const handleReset = () => {\r\n        setCount(0);\r\n      }\r\n    //ボタン押すと３秒のカウントダウンが始まる処理\r\n    useEffect(() => {\r\n      let interval:NodeJS.Timeout | null;\r\n      /* useEffectではstateが、≠nullのときにタイマーを動し続けるように設定\r\n      → bottunを押したときにstateを3（=3秒タイマーの開始値)に設定（下のhandleStart関数）\r\n      → カウントが開始される\r\n\r\n      → onClick属性には、stateを3に設定する処理のみを与えれば十分\r\n      */\r\n      if (countdown! > 0) {\r\n        interval = setInterval(() => {\r\n          setDown( (prevtime: number ) => prevtime - 1);  //アンマウント\r\n        }, 1000);\r\n        if(count === goal){\r\n          clearInterval(interval!);\r\n        }\r\n\r\n      };\r\n\r\n      if (countdown! <= 0) {\r\n        setCount(0);\r\n        setDown(0);\r\n        clearInterval(interval!);\r\n      }\r\n\r\n\r\n      return () => {\r\n        clearInterval(interval!);\r\n      };\r\n    }, [count, countdown, goal]);\r\n\r\n  return (\r\n    <div>\r\n        <button  className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\" onClick={handleIncreaseOne}>+1</button>\r\n        <button  onClick={handleIncraese(PlusNumber)}>+{PlusNumber}</button>\r\n        <button  onClick={handleIncraese(PlusNumber2)}>+{PlusNumber2}</button>\r\n        <button  onClick={handleDoubling(KakeNumber)}>×{KakeNumber}</button>\r\n        <button  onClick={handleDoubling(KakeNumber2)}>×{KakeNumber2}</button>\r\n        <button  onClick={handleReset}>reset</button>\r\n        <p className=\"mt-4\">{howmany}回操作しました</p>\r\n    </div>\r\n  )\r\n}\r\nexport default Calculate;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}