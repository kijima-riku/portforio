{"ast":null,"code":"var _jsxFileName = \"/Users/kijimariku/Downloads/library/src/calculate/components1/calculate.tsx\",\n  _s = $RefreshSig$();\n//数値を計算する、手数を数える、カウントダウン\nimport React, { useEffect } from 'react';\nimport \"../css/calculate.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\nconst Calculate = _ref => {\n  _s();\n  let {\n    count,\n    goal,\n    setCount,\n    countdown,\n    setDown,\n    howmany,\n    countHowmany,\n    score,\n    setScore,\n    Plus_No1,\n    Plus_No2,\n    Kake_No1,\n    Kake_No2\n  } = _ref;\n  const PlusNumber = Plus_No1;\n  const PlusNumber2 = Plus_No2;\n  const KakeNumber = Kake_No1;\n  const KakeNumber2 = Kake_No2;\n\n  //計算\n  const times = i => {\n    //操作数の関数\n    countHowmany(prevTimes => prevTimes + i);\n  };\n  const increase = (time, Plus) => {\n    times(time);\n    return count + Plus;\n  };\n  const doubling = Kake => {\n    times(1);\n    return count * Kake;\n  };\n  const handleIncreaseOne = () => {\n    setCount(increase(2, 1));\n    setDown(3);\n    setScore(prevscore => prevscore - 100);\n  };\n  const handleIncraese = Plus => {\n    return () => {\n      setCount(increase(1, Plus));\n      setDown(3);\n      setScore(prevscore => prevscore - 1);\n    };\n  };\n  const handleDoubling = Kake => {\n    return () => {\n      if (count * Kake === goal) {\n        setScore(prevscore => prevscore * Kake);\n      } else {\n        setScore(prevscore => prevscore - 1);\n      }\n      ;\n      setCount(doubling(Kake));\n      setDown(3);\n    };\n  };\n  const handleReset = () => {\n    setCount(0);\n  };\n  //ボタン押すと３秒のカウントダウンが始まる処理\n  useEffect(() => {\n    let interval3 = null;\n    /* useEffectではstateが、≠nullのときにタイマーを動し続けるように設定\r\n    → bottunを押したときにstateを3（=3秒タイマーの開始値)に設定（下のhandleStart関数）\r\n    → カウントが開始される\r\n      → onClick属性には、stateを3に設定する処理のみを与えれば十分\r\n    */\n    if (countdown !== null && countdown > 0) {\n      interval3 = setInterval(() => {\n        setDown(prevtime => prevtime - 1); //アンマウント\n      }, 1000);\n    }\n    ;\n    if (count === goal || score <= 0) {\n      clearInterval(interval3);\n      setDown(null);\n    }\n    if (countdown <= 0 && countdown !== null) {\n      setScore(prevscore => prevscore - 200);\n      setCount(0);\n      setDown(null);\n    }\n    return () => {\n      clearInterval(interval3);\n    };\n  }, [count, countdown]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container_calc\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"calc\",\n      onClick: handleIncreaseOne,\n      children: \"+1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"calc\",\n      onClick: handleIncraese(PlusNumber),\n      children: [\"+\", PlusNumber]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"calc\",\n      onClick: handleIncraese(PlusNumber2),\n      children: [\"+\", PlusNumber2]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"calc\",\n      onClick: handleDoubling(KakeNumber),\n      children: [\"\\xD7\", KakeNumber]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"calc\",\n      onClick: handleDoubling(KakeNumber2),\n      children: [\"\\xD7\", KakeNumber2]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"reset\",\n      onClick: handleReset,\n      children: \"reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"howmany mt-4\",\n      children: [howmany, \"\\u56DE\\u64CD\\u4F5C\\u3057\\u307E\\u3057\\u305F\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(Calculate, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Calculate;\nexport default Calculate;\nvar _c;\n$RefreshReg$(_c, \"Calculate\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","Calculate","_ref","_s","count","goal","setCount","countdown","setDown","howmany","countHowmany","score","setScore","Plus_No1","Plus_No2","Kake_No1","Kake_No2","PlusNumber","PlusNumber2","KakeNumber","KakeNumber2","times","i","prevTimes","increase","time","Plus","doubling","Kake","handleIncreaseOne","prevscore","handleIncraese","handleDoubling","handleReset","interval3","setInterval","prevtime","clearInterval","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kijimariku/Downloads/library/src/calculate/components1/calculate.tsx"],"sourcesContent":["//数値を計算する、手数を数える、カウントダウン\r\nimport React,{useEffect} from 'react';\r\nimport \"../css/calculate.css\"\r\n\r\ninterface calcProps{\r\n  count: number;\r\n  goal: number;\r\n  setCount: (value : number) => void;\r\n  countdown: number | null;\r\n  setDown: Function;\r\n  howmany: number;\r\n  countHowmany: Function;\r\n  score: number;\r\n  setScore: Function;\r\n  Plus_No1: number;\r\n  Plus_No2: number;\r\n  Kake_No1: number;\r\n  Kake_No2: number;\r\n};\r\n\r\n\r\nconst Calculate:React.FC<calcProps>= ({count, goal, setCount, countdown, setDown,howmany, countHowmany, score , setScore, Plus_No1, Plus_No2, Kake_No1, Kake_No2}) => {\r\n\r\n  const PlusNumber:number = Plus_No1;\r\n  const PlusNumber2:number = Plus_No2;\r\n  const KakeNumber: number = Kake_No1;\r\n  const KakeNumber2: number = Kake_No2;\r\n\r\n    //計算\r\n    const times = (i : number) => { //操作数の関数\r\n      countHowmany((prevTimes: number) => prevTimes + i);\r\n    }\r\n    const increase = (time:number, Plus: number) => {\r\n        times(time);\r\n        return count + Plus;\r\n        };\r\n    const doubling = (Kake: number) => {\r\n        times(1);\r\n         return count * Kake;\r\n        };\r\n\r\n    const handleIncreaseOne = () => {\r\n      setCount(increase(2, 1));\r\n      setDown(3);\r\n      setScore((prevscore:number) => prevscore - 100)\r\n    };\r\n    const handleIncraese = (Plus: number) => {\r\n        return () => {\r\n        setCount(increase(1, Plus));\r\n        setDown(3);\r\n        setScore((prevscore:number) => prevscore - 1)\r\n      };\r\n      };\r\n\r\n    const handleDoubling = (Kake: number) => {\r\n      return () => {\r\n      if(count * Kake === goal) {\r\n        setScore ((prevscore: number) => prevscore * Kake );\r\n      }else{\r\n      setScore((prevscore:number) => prevscore - 1)\r\n      };\r\n      setCount(doubling(Kake));\r\n      setDown(3);\r\n      };}\r\n\r\n    const handleReset = () => {\r\n        setCount(0);\r\n      }\r\n    //ボタン押すと３秒のカウントダウンが始まる処理\r\n    useEffect(() => {\r\n      let interval3:NodeJS.Timeout | null = null;\r\n      /* useEffectではstateが、≠nullのときにタイマーを動し続けるように設定\r\n      → bottunを押したときにstateを3（=3秒タイマーの開始値)に設定（下のhandleStart関数）\r\n      → カウントが開始される\r\n\r\n      → onClick属性には、stateを3に設定する処理のみを与えれば十分\r\n      */\r\n      if (countdown !== null && countdown > 0) {\r\n        interval3 = setInterval(() => {\r\n          setDown( (prevtime: number ) => prevtime - 1);  //アンマウント\r\n        }, 1000);\r\n\r\n      };\r\n      if(count === goal || score <= 0){\r\n        clearInterval(interval3!)\r\n        setDown(null)\r\n      }\r\n\r\n      if (countdown! <= 0 && countdown !== null) {\r\n        setScore((prevscore: number) => prevscore - 200 )\r\n        setCount(0);\r\n        setDown(null);\r\n      }\r\n\r\n\r\n      return () => {\r\n        clearInterval(interval3!);\r\n      };\r\n    }, [ count, countdown ]);\r\n\r\n  return (\r\n    <div className='container_calc'>\r\n        <button  className=\"calc\" onClick={handleIncreaseOne}>+1</button>\r\n        <button  className=\"calc\" onClick={handleIncraese(PlusNumber)}>+{PlusNumber}</button>\r\n        <button  className=\"calc\" onClick={handleIncraese(PlusNumber2)}>+{PlusNumber2}</button>\r\n        <button  className=\"calc\" onClick={handleDoubling(KakeNumber)}>×{KakeNumber}</button>\r\n        <button  className=\"calc\" onClick={handleDoubling(KakeNumber2)}>×{KakeNumber2}</button>\r\n        <button  className=\"reset\" onClick={handleReset}>reset</button>\r\n        <p className=\"howmany mt-4\">{howmany}回操作しました</p>\r\n    </div>\r\n  )\r\n}\r\nexport default Calculate;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}